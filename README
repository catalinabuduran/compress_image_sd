In tema2.c am inceput cu citirea datelor reprezentative imaginii din fisierul binar. Apoi am citit culorile fiecarui pixel, apoi am apelat functiile in functie de task-ul pe care il aveam de rezolvat.
In functia 'meanRGB' am calculat media aritmetica a valorilor din submatricea de pixeli corespunzatoare unui anumit bloc prin intermediul formulelor date, rezultand astfel culoarea medie.
In functia 'createTree', am calculat, de asemenea, prin intermediul formulei date, scorul similaritatii pentru fiecare bloc. Am comparat acest scor cu pragul impus; daca scorul e mai mic decat pragul, atunci nodul curent e frunza, e de tipul 1, salvam culori reprezentative, incrementam numarul de frunze, echivalent cu numarul de blocuri din imagine pentru care scorul e mia mic decat factorul. Am comparat variabila 'dimensiune' cu size, deoarece e reprezentativa pentru dimensiunea laturii patratului pentru cea mai mare zona din imagine care a ramas nedivizata. Daca acest scor e mai mare decat pragul, nodul curent are copii, urmand sa apelez recursiv aceasta functie pentru toti cei 4 copii ai fiecarui nod.
In functia DFS am calculat numarul de niveluri al fiecarui arbore, parcurgandu-l in adancime.
In functia BFS, am afisat dimensiunea imaginii, functia primeste ca parametru nodul radacina pe care -l adauga intr-o coada. Dupa aceea, initializez pozitia elementului curent si a ultimului element din coada. Cat timp nu am ajuns la ultimul element, verific daca elementul curent e frunza; daca da, afisez tipul, acesta fiind 1, dar si culorile. Daca elementul nu e frunza, acesta e de tip 0 si adaug fiecare copil in coada. Inainte de a-l adauga, realoc coada.
